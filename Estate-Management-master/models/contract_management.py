from odoo import models, fields, api
from collections import Counter


class ContractManagement(models.Model):
    """
    This class is used to manage contracts between a buyer and a seller.
    A contract is generated by creating a new contract record.
    """
    _name = 'contract.management'
    _description = 'Contract Management'
    _inherit = ['mail.thread', 'mail.activity.mixin']

    name = fields.Char(string="Name", compute="_compute_name", store=True,
                       help="Name of the contract")

    termination_cause = fields.Text(string="Termination Cause", tracking=True)

    #### Relational fields ####

    clauses_ids = fields.Many2many(
        'contract.clause', string="Clauses", default=lambda self: self._add_standard_clause(),
        help="List of clauses included in the contract", tracking=True)

    terminate_clause_id = fields.Many2one(
        'contract.clause', string="Terminate Clause", help="Clause to terminate the contract")

    agreement_id = fields.Many2one(
        'lease.agreement', string="Agreement", help="Agreement related to the contract")
    duration = fields.Integer(string="Duration in Months", related='agreement_id.duration',
                              help="Duration of the contract in months")
    start_date = fields.Date(string="Start Date", related='agreement_id.start_date',
                             help="Start date of the contract")
    end_date = fields.Date(string="End Date", related='agreement_id.end_date',
                           help="End date of the contract")
    price = fields.Float(string="Price", related='agreement_id.price')

    ##### Report fields #####

    avg_duration = fields.Integer(compute="_compute_avg_duration")
    most_used_clause_name = fields.Char(
        compute="_compute_most_used_clause_name"
    )

    #### COMPUTE ####
    @api.depends('agreement_id')
    def _compute_name(self):

        for rec in self:
            rec.name = f'Contract for {rec.agreement_id.name}'

    @api.depends('duration')
    def _compute_avg_duration(self):

        value = sum((rec.duration for rec in self.search([]))) / \
            (self.search_count([]) or 1)

        for rec in self:
            rec.avg_duration = value

    @api.depends('clauses_ids')
    def _compute_most_used_clause_name(self):
        clause_counts = Counter()
        for rec in self:
            clause_counts.update(rec.clauses_ids.mapped('name'))

        # Find clause with the highest count (handle ties)
        most_used_clause = clause_counts.most_common(1)

        for rec in self:
            # Store results
            rec.most_used_clause_name = most_used_clause[0][0] if most_used_clause else None

    #### DEFAULT ####
    def _add_standard_clause(self):
        std_clause = self.env['contract.clause'].search([
            ('clause_type', '=', 'standard')
        ])
        return std_clause

    #### ACTIONS ####
    def action_terminate(self):
        pass


class Clause(models.Model):
    """
    This model is used to represent clauses included in a contract.
    """
    _name = 'contract.clause'
    _description = 'Contract Clause'

    name = fields.Char(
        'Clause Name', required=True,  # Clause name, e.g. "Rent payment"
        help="Name of the clause included in the contract")
    description = fields.Text(
        'Description',  # Description of the clause
        help="Description of the clause, includes all the details needed")
    clause_type = fields.Selection(
        [
            ('standard', 'Standard'),
            ('custom', 'Custom')
        ]
    )
